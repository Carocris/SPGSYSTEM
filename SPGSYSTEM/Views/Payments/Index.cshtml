@model IEnumerable<Application.ViewModels.Payment.PaymentViewModel>
@using Database.Enum

@{
    ViewData["Title"] = "Gesti√≥n de Pagos";
}

<style>
    /* Responsive table styles */
    .table-responsive {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }
    
    /* Mobile-friendly table */
    @@media (max-width: 768px) {
        .table-responsive {
            font-size: 0.875rem;
        }
        
        .table th,
        .table td {
            padding: 0.5rem 0.25rem;
            vertical-align: middle;
        }
        
        /* Custom button sizes for more compact design */
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            line-height: 1.2;
        }

        .btn-group-sm .btn i {
            font-size: 0.7rem;
        }

        /* Make button groups more compact */
        .btn-group {
            gap: 1px;
        }

        .btn-group .btn {
            border-radius: 0;
        }

        .btn-group .btn:first-child {
            border-top-left-radius: 0.25rem;
            border-bottom-left-radius: 0.25rem;
        }

        .btn-group .btn:last-child {
            border-top-right-radius: 0.25rem;
            border-bottom-right-radius: 0.25rem;
        }
        
        .badge {
            font-size: 0.75rem;
        }
        
        .avatar-sm {
            width: 24px !important;
            height: 24px !important;
            font-size: 0.75rem;
        }
        
        .payment-icon {
            font-size: 1em !important;
        }
        
        .text-truncate {
            max-width: 80px !important;
        }
    }
    
    /* Tablet adjustments */
    @@media (min-width: 769px) and (max-width: 1024px) {
        .table-responsive {
            font-size: 0.9rem;
        }
        
        .text-truncate {
            max-width: 120px !important;
        }
    }
    
    /* Hover effects */
    .table-hover tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
    }
    
    /* Payment method icons */
    .payment-icon {
        display: inline-block;
        text-align: center;
        min-width: 1.5em;
    }
    
    /* Status badges */
    .badge {
        font-size: 0.8rem;
        padding: 0.35em 0.65em;
    }
    
    /* Button groups */
    .btn-group-vertical .btn-group {
        display: flex;
        flex-direction: row;
    }
    
    .btn-group-vertical .btn-group .btn {
        border-radius: 0.25rem;
        margin-right: 0.125rem;
    }
    
    /* Avatar styles */
    .avatar-sm {
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        font-size: 0.875rem;
    }
    
    /* Text truncation */
    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

<div class="row">
    <div class="col-12">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h2 class="h2 text-primary mb-1">
                    <i class="fas fa-credit-card me-2"></i>Administraci√≥n de Pagos
                </h2>
                <p class="text-muted mb-0">Gestiona y administra los pagos existentes del sistema</p>
            </div>
            <div class="d-flex gap-2">
                <a asp-controller="Sales" asp-action="CreateEdit" class="btn btn-outline-primary">
                    <i class="fas fa-plus me-2"></i>Nueva Venta con Pago
                </a>
                @if (Model.Any())
                {
                    <a asp-action="CreateEdit" class="btn btn-success">
                        <i class="fas fa-credit-card me-2"></i>Gestionar Pago
            </a>
                }
            </div>
        </div>

        <!-- Alert Messages -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Information Section -->
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-start">
                <i class="fas fa-info-circle me-2 mt-1"></i>
                <div>
                    <strong>¬øC√≥mo funciona el sistema de pagos?</strong>
                    <ul class="mb-0 mt-2">
                        <li><strong>Crear pagos:</strong> Ve a <a href="/Sales/CreateEdit" class="alert-link">Ventas</a> y crea una nueva venta con pago incluido</li>
                        <li><strong>Gestionar pagos:</strong> Aqu√≠ puedes cambiar el estado de los pagos existentes (Completado ‚Üî Cancelado)</li>
                        <li><strong>Stock autom√°tico:</strong> El stock se actualiza autom√°ticamente seg√∫n el estado del pago</li>
                    </ul>
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>

        <!-- Search and Filter Section -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-light">
                <h6 class="card-title mb-0">
                    <i class="fas fa-filter me-2"></i>Filtros y B√∫squeda
                </h6>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-text bg-light">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input type="text" class="form-control" id="searchInput" 
                                   placeholder="Buscar por cliente, venta o m√©todo...">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="paymentMethodFilter">
                            <option value="">Todos los m√©todos</option>
                            <option value="cash">üíµ Efectivo</option>
                            <option value="card">üí≥ Tarjeta</option>
                            <option value="transfer">üè¶ Transferencia</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="amountFilter">
                            <option value="">Todos los montos</option>
                            <option value="low">$0 - $500</option>
                            <option value="medium">$500 - $2000</option>
                            <option value="high">$2000+</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <input type="date" class="form-control" id="dateFilter" 
                               title="Filtrar por fecha" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="col-md-2">
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-outline-secondary" id="clearFilters">
                                <i class="fas fa-times me-1"></i>Limpiar
                            </button>
                            <button type="button" class="btn btn-primary" id="applyFilters">
                                <i class="fas fa-filter me-1"></i>Aplicar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (Model != null && Model.Any())
        {
            <!-- Filter Status -->
            <div class="alert alert-info d-none" id="filterStatus" role="alert">
                <i class="fas fa-filter me-2"></i>Filtros activos
            </div>

            <!-- Payments Table -->
            <div class="card shadow-sm">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="paymentsTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0" style="width: 8%;">
                                        <i class="fas fa-hashtag me-2"></i>ID
                                    </th>
                                    <th class="border-0" style="width: 12%;">
                                        <i class="fas fa-shopping-cart me-2"></i>Venta
                                    </th>
                                    <th class="border-0" style="width: 20%;">
                                        <i class="fas fa-user me-2"></i>Cliente
                                    </th>
                                    <th class="border-0" style="width: 18%;">
                                        <i class="fas fa-credit-card me-2"></i>M√©todo
                                    </th>
                                    <th class="border-0" style="width: 12%;">
                                        <i class="fas fa-dollar-sign me-2"></i>Monto
                                    </th>
                                    <th class="text-center">
                                        <i class="fas fa-cogs me-1"></i>Acciones
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                @foreach (var payment in Model)
                {
                                    <tr class="payment-row" 
                         data-customer="@payment.CustomerName.ToLower()" 
                         data-sale="@payment.SaleNumber.ToLower()"
                         data-method="@payment.PaymentMethod.ToString().ToLower()"
                         data-amount="@payment.Amount"
                         data-date="@payment.PaymentDate.ToString("yyyy-MM-dd")">
                                        <td class="align-middle">
                                            <span class="badge bg-secondary">#@payment.Id</span>
                                        </td>
                                        <td class="align-middle">
                                        <div>
                                                <strong class="text-primary">@payment.SaleNumber</strong>
                                                <br>
                                                <small class="text-muted">@payment.SaleDate.ToString("dd/MM/yyyy")</small>
                                            </div>
                                        </td>
                                        <td class="align-middle">
                                        <div class="d-flex align-items-center">
                                                <div class="avatar-sm bg-primary text-white rounded-circle me-2 d-flex align-items-center justify-content-center" style="width: 32px; height: 32px;">
                                                <i class="fas fa-user"></i>
                                            </div>
                                                <div class="text-truncate">
                                                    <strong class="d-block text-truncate" style="max-width: 150px;">@payment.CustomerName</strong>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle">
                                                <div class="d-flex align-items-center">
                                                <div class="payment-icon me-2" style="font-size: 1.2em;">
                                                    @payment.PaymentMethodIcon
                                                </div>
                                                <div class="text-truncate">
                                                    <div class="fw-medium text-truncate" style="max-width: 100px;">@payment.PaymentMethodName</div>
                                                    <small class="text-muted">@payment.PaymentDate.ToString("dd/MM/yyyy HH:mm")</small>
                                                    @if (payment.PaymentMethod == Database.Enum.PaymentMethodType.Transfer)
                                                    {
                                                        <div class="transfer-info mt-1">
                                                            @if (!string.IsNullOrEmpty(payment.TransferReference))
                                                            {
                                                                <div class="transfer-detail">
                                                                    <i class="fas fa-hashtag text-info me-1"></i>
                                                                    <small class="text-info fw-medium">Ref: @payment.TransferReference</small>
                                            </div>
                                                            }
                                                            @if (!string.IsNullOrEmpty(payment.BankAccount))
                                                            {
                                                                <div class="transfer-detail">
                                                                    <i class="fas fa-university text-primary me-1"></i>
                                                                    <small class="text-muted">Cuenta: @payment.BankAccount</small>
                                        </div>
                                                            }
                                                            @if (!string.IsNullOrEmpty(payment.TransferReceiptPath))
                                                            {
                                                                <div class="transfer-detail">
                                                                    <i class="fas fa-image text-success me-1"></i>
                                                                    <small class="text-success">Comprobante disponible</small>
                                                    </div>
                                                            }
                                                    </div>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle">
                                            <span class="fw-bold text-success">$@payment.Amount.ToString("N2")</span>
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="CreateEdit" asp-route-id="@payment.Id" 
                                                   class="btn btn-outline-primary" 
                                                   title="Gestionar Pago">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                                <a asp-action="Details" asp-route-id="@payment.Id" 
                                                   class="btn btn-outline-info" 
                                                   title="Ver Detalles">
                                                    <i class="fas fa-eye"></i>
                                        </a>
                                                @if (payment.Status == PaymentStatusType.Completed)
                                                {
                                                    <button type="button" class="btn btn-outline-warning" 
                                                            onclick="confirmCancelPayment(@payment.Id)" 
                                                            title="Cancelar Pago">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                }
                                                <button type="button" class="btn btn-outline-danger" 
                                                        onclick="confirmDelete(@payment.Id)" 
                                                        title="Eliminar Pago">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Statistics Section -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-4">
                                    <div class="stat-item">
                                        <h4 class="text-primary mb-1">@Model.Count()</h4>
                                        <small class="text-muted">Total Pagos</small>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="stat-item">
                                        <h4 class="text-success mb-1">$@Model.Sum(p => p.Amount).ToString("N2")</h4>
                                        <small class="text-muted">Total Recaudado</small>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="stat-item">
                                        <h4 class="text-info mb-1">@Model.Average(p => p.Amount).ToString("N2")</h4>
                                        <small class="text-muted">Promedio por Pago</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Methods Distribution -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-chart-pie me-2"></i>Distribuci√≥n por M√©todo de Pago
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @{
                                    var cashCount = Model.Count(p => p.PaymentMethod == Database.Enum.PaymentMethodType.Cash);
                                    var cardCount = Model.Count(p => p.PaymentMethod == Database.Enum.PaymentMethodType.Card);
                                    var transferCount = Model.Count(p => p.PaymentMethod == Database.Enum.PaymentMethodType.Transfer);
                                    var totalCount = Model.Count();
                                }
                                <div class="col-md-4 text-center">
                                    <div class="method-stat">
                                        <div class="method-icon cash mb-2">
                                            <i class="fas fa-money-bill-wave fa-2x"></i>
                                        </div>
                                        <h5 class="mb-1">@cashCount</h5>
                                        <small class="text-muted">üíµ Efectivo (@(totalCount > 0 ? (cashCount * 100 / totalCount).ToString("F0") : "0")%)</small>
                                    </div>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="method-stat">
                                        <div class="method-icon card mb-2">
                                            <i class="fas fa-credit-card fa-2x"></i>
                                        </div>
                                        <h5 class="mb-1">@cardCount</h5>
                                        <small class="text-muted">üí≥ Tarjeta (@(totalCount > 0 ? (cardCount * 100 / totalCount).ToString("F0") : "0")%)</small>
                                    </div>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="method-stat">
                                        <div class="method-icon transfer mb-2">
                                            <i class="fas fa-exchange-alt fa-2x"></i>
                                        </div>
                                        <h5 class="mb-1">@transferCount</h5>
                                        <small class="text-muted">üè¶ Transferencia (@(totalCount > 0 ? (transferCount * 100 / totalCount).ToString("F0") : "0")%)</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <!-- No Payments Message -->
            <div class="card shadow-sm">
                <div class="card-body text-center py-5">
                <div class="mb-4">
                    <i class="fas fa-credit-card text-muted" style="font-size: 4rem;"></i>
                </div>
                <h4 class="text-muted mb-3">No hay pagos registrados</h4>
                    <p class="text-muted mb-4">
                        Los pagos se crean autom√°ticamente cuando realizas una venta.<br>
                        Ve a <strong>Ventas</strong> para crear tu primera venta con pago.
                    </p>
                    <a asp-controller="Sales" asp-action="CreateEdit" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Crear Primera Venta
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirmar Eliminaci√≥n
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">¬øEst√°s seguro de que deseas eliminar el pago de la venta:</p>
                <div class="alert alert-warning">
                    <strong id="saleNumberToDelete"></strong>
                </div>
                <p class="text-muted mb-0">Esta acci√≥n restaurar√° el stock de los productos y no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form asp-action="Delete" method="post" class="d-inline">
                    <input type="hidden" id="deletePaymentId" name="id" value="" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Eliminar Pago
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script>
        // Funci√≥n para confirmar cancelaci√≥n de pago
        function confirmCancelPayment(paymentId) {
            if (confirm('¬øEst√°s seguro de que deseas cancelar este pago?\n\n‚ö†Ô∏è ADVERTENCIA: Esto restaurar√° el stock de los productos.')) {
                // Crear un formulario temporal para enviar la solicitud
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("ChangeStatus", "Payments")';
                
                // Agregar token CSRF
                const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const csrfInput = document.createElement('input');
                csrfInput.type = 'hidden';
                csrfInput.name = '__RequestVerificationToken';
                csrfInput.value = csrfToken;
                form.appendChild(csrfInput);
                
                // Agregar par√°metros
                const idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = paymentId;
                form.appendChild(idInput);
                
                const statusInput = document.createElement('input');
                statusInput.type = 'hidden';
                statusInput.name = 'newStatus';
                statusInput.value = '2'; // PaymentStatusType.Cancelled
                form.appendChild(statusInput);
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Funci√≥n para confirmar eliminaci√≥n
        function confirmDelete(paymentId) {
            if (confirm('¬øEst√°s seguro de que deseas eliminar este pago?\n\n‚ö†Ô∏è Esta acci√≥n no se puede deshacer.')) {
                window.location.href = '@Url.Action("Delete", "Payments")/' + paymentId;
            }
        }

        // Filtros de b√∫squeda
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const paymentMethodFilter = document.getElementById('paymentMethodFilter');
            const amountFilter = document.getElementById('amountFilter');
            const dateFilter = document.getElementById('dateFilter');
            const clearFiltersBtn = document.getElementById('clearFilters');
            const applyFiltersBtn = document.getElementById('applyFilters');
            const filterStatus = document.getElementById('filterStatus');
            const paymentRows = document.querySelectorAll('.payment-row');

            function applyFilters() {
                const searchTerm = searchInput.value.toLowerCase();
                const methodFilter = paymentMethodFilter.value.toLowerCase();
                const amountFilterValue = amountFilter.value;
                const dateFilterValue = dateFilter.value;

                let visibleCount = 0;
                let hasActiveFilters = searchTerm || methodFilter || amountFilterValue || dateFilterValue;

                paymentRows.forEach(row => {
                    const customer = row.dataset.customer;
                    const sale = row.dataset.sale;
                    const method = row.dataset.method;
                    const amount = parseFloat(row.dataset.amount);
                    const date = row.dataset.date;

                    let show = true;

                    // Filtro de b√∫squeda
                if (searchTerm && !customer.includes(searchTerm) && !sale.includes(searchTerm) && !method.includes(searchTerm)) {
                        show = false;
                }

                    // Filtro de m√©todo de pago
                if (methodFilter && method !== methodFilter) {
                        show = false;
                }

                    // Filtro de monto
                    if (amountFilterValue) {
                        switch (amountFilterValue) {
                        case 'low':
                                if (amount > 500) show = false;
                            break;
                        case 'medium':
                                if (amount < 500 || amount > 2000) show = false;
                            break;
                        case 'high':
                                if (amount < 2000) show = false;
                            break;
                    }
                }

                    // Filtro de fecha
                    if (dateFilterValue && date !== dateFilterValue) {
                        show = false;
                }

                    row.style.display = show ? '' : 'none';
                    if (show) visibleCount++;
                });

                // Mostrar/ocultar estado de filtros
                if (hasActiveFilters) {
                    filterStatus.classList.remove('d-none');
                    filterStatus.innerHTML = `<i class="fas fa-filter me-2"></i>Filtros activos - Mostrando ${visibleCount} de ${paymentRows.length} pagos`;
                } else {
                    filterStatus.classList.add('d-none');
                }
        }

            // Event listeners
            searchInput.addEventListener('input', applyFilters);
            paymentMethodFilter.addEventListener('change', applyFilters);
            amountFilter.addEventListener('change', applyFilters);
            dateFilter.addEventListener('change', applyFilters);

            clearFiltersBtn.addEventListener('click', function() {
                searchInput.value = '';
                paymentMethodFilter.value = '';
                amountFilter.value = '';
                dateFilter.value = '@DateTime.Now.ToString("yyyy-MM-dd")';
                applyFilters();
            });

            applyFiltersBtn.addEventListener('click', applyFilters);

            // Aplicar filtros al cargar la p√°gina
            applyFilters();
        });
    </script>

    <style>
        .payment-row {
            transition: background-color 0.3s ease;
        }

        .payment-row:hover {
            background-color: #f8f9fa;
        }

        .avatar-sm {
            width: 32px;
            height: 32px;
            font-size: 0.875rem;
        }

        .btn-group .btn {
            border-radius: 0;
        }

        .btn-group .btn:first-child {
            border-top-left-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
        }

        .btn-group .btn:last-child {
            border-top-right-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
        }

        /* Custom button sizes for more compact design */
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            line-height: 1.2;
        }

        .btn-group-sm .btn i {
            font-size: 0.7rem;
        }

        /* Make button groups more compact */
        .btn-group {
            gap: 1px;
        }

        .stat-item {
            padding: 1rem 0;
        }

        .method-stat {
            padding: 1rem;
        }

        .method-icon.cash {
            color: #198754;
        }

        .method-icon.card {
            color: #0d6efd;
        }

        .method-icon.transfer {
            color: #0dcaf0;
        }

        .table-responsive {
            border-radius: 0.375rem;
        }

        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.875rem;
            letter-spacing: 0.5px;
        }

        .table td {
            vertical-align: middle;
        }

        /* Transfer information styles */
        .transfer-info {
            margin-top: 0.5rem;
        }

        .transfer-detail {
            display: flex;
            align-items: center;
            margin-bottom: 0.25rem;
        }

        .transfer-detail:last-child {
            margin-bottom: 0;
        }

        .transfer-detail i {
            font-size: 0.7rem;
            width: 12px;
        }

        .transfer-detail small {
            font-size: 0.7rem;
            line-height: 1.2;
        }

        /* Enhanced transfer display */
        .payment-icon.transfer {
            color: #0dcaf0;
        }

        @@media (max-width: 768px) {
            .btn-group .btn {
                font-size: 0.8rem;
                padding: 0.375rem 0.5rem;
            }
            
            .table-responsive {
                font-size: 0.875rem;
            }
        }
    </style>
}

@functions {
    public string GetPaymentMethodBadgeClass(Database.Enum.PaymentMethodType method)
    {
        return method switch
        {
            Database.Enum.PaymentMethodType.Cash => "bg-success",
            Database.Enum.PaymentMethodType.Card => "bg-primary",
            Database.Enum.PaymentMethodType.Transfer => "bg-info",
            _ => "bg-secondary"
        };
    }

    public string GetPaymentMethodIcon(Database.Enum.PaymentMethodType method)
    {
        return method switch
        {
            Database.Enum.PaymentMethodType.Cash => "üíµ",
            Database.Enum.PaymentMethodType.Card => "üí≥",
            Database.Enum.PaymentMethodType.Transfer => "üè¶",
            _ => "‚ùì"
        };
    }

    public string GetPaymentMethodName(Database.Enum.PaymentMethodType method)
    {
        return method switch
        {
            Database.Enum.PaymentMethodType.Cash => "Efectivo",
            Database.Enum.PaymentMethodType.Card => "Tarjeta",
            Database.Enum.PaymentMethodType.Transfer => "Transferencia",
            _ => "Desconocido"
        };
    }
} 