@model IEnumerable<Application.ViewModels.Payment.PaymentViewModel>

@{
    ViewData["Title"] = "Gesti√≥n de Pagos";
}

<div class="row">
    <div class="col-12">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h2 class="h2 text-primary mb-1">
                    <i class="fas fa-credit-card me-2"></i>Gesti√≥n de Pagos
                </h2>
                <p class="text-muted mb-0">Administra los pagos y transacciones del sistema</p>
            </div>
            <a asp-action="CreateEdit" class="btn btn-success btn-lg">
                <i class="fas fa-plus me-2"></i>Nuevo Pago
            </a>
        </div>

        <!-- Alert Messages -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Search and Filter Section -->
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-text bg-light">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input type="text" class="form-control" id="searchInput" placeholder="Buscar por cliente, venta o m√©todo...">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" id="paymentMethodFilter">
                            <option value="">Todos los m√©todos</option>
                            <option value="cash">üíµ Efectivo</option>
                            <option value="card">üí≥ Tarjeta</option>
                            <option value="transfer">üè¶ Transferencia</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" id="amountFilter">
                            <option value="">Todos los montos</option>
                            <option value="low">$0 - $500</option>
                            <option value="medium">$500 - $2000</option>
                            <option value="high">$2000+</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <input type="date" class="form-control" id="dateFilter" title="Filtrar por fecha">
                    </div>
                </div>
            </div>
        </div>

        @if (Model != null && Model.Any())
        {
            <!-- Payments Grid -->
            <div class="row" id="paymentsContainer">
                @foreach (var payment in Model)
                {
                    <div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-4 payment-card" 
                         data-customer="@payment.CustomerName.ToLower()" 
                         data-sale="@payment.SaleNumber.ToLower()"
                         data-method="@payment.PaymentMethod.ToString().ToLower()"
                         data-amount="@payment.Amount"
                         data-date="@payment.PaymentDate.ToString("yyyy-MM-dd")">
                        <div class="card h-100 shadow-sm border-0 payment-item">
                            <div class="card-header @GetPaymentMethodHeaderClass(payment.PaymentMethod) text-white py-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        <div class="payment-method-icon me-3">
                                            @switch(payment.PaymentMethod.ToString())
                                            {
                                                case "Cash":
                                                    <i class="fas fa-money-bill-wave"></i>
                                                    break;
                                                case "Card":
                                                    <i class="fas fa-credit-card"></i>
                                                    break;
                                                case "Transfer":
                                                    <i class="fas fa-exchange-alt"></i>
                                                    break;
                                            }
                                        </div>
                                        <div>
                                            <h6 class="card-title mb-0 fw-bold">
                                                @GetPaymentMethodName(payment.PaymentMethod)
                                            </h6>
                                            <small class="opacity-75">Pago ID: #@payment.Id</small>
                                        </div>
                                    </div>
                                    <span class="badge bg-light text-dark">
                                        <i class="fas fa-calendar me-1"></i>@payment.PaymentDate.ToString("dd/MM")
                                    </span>
                                </div>
                            </div>
                            
                            <div class="card-body d-flex flex-column">
                                <div class="payment-info flex-grow-1">
                                    <!-- Sale Information -->
                                    <div class="info-item mb-3">
                                        <div class="d-flex align-items-center">
                                            <div class="info-icon bg-primary me-3">
                                                <i class="fas fa-shopping-cart"></i>
                                            </div>
                                            <div class="flex-grow-1">
                                                <small class="text-muted d-block">Venta</small>
                                                <span class="fw-medium">@payment.SaleNumber</span>
                                                <br>
                                                <small class="text-muted">@payment.SaleDate.ToString("dd/MM/yyyy")</small>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Customer Information -->
                                    <div class="info-item mb-3">
                                        <div class="d-flex align-items-center">
                                            <div class="info-icon bg-info me-3">
                                                <i class="fas fa-user"></i>
                                            </div>
                                            <div class="flex-grow-1">
                                                <small class="text-muted d-block">Cliente</small>
                                                <span class="fw-medium">@payment.CustomerName</span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Amount and Status -->
                                    <div class="row g-2">
                                        <div class="col-6">
                                            <div class="info-item">
                                                <div class="d-flex align-items-center">
                                                    <div class="info-icon bg-success me-2">
                                                        <i class="fas fa-dollar-sign"></i>
                                                    </div>
                                                    <div class="flex-grow-1">
                                                        <small class="text-muted d-block">Monto</small>
                                                        <span class="fw-bold text-success">$@payment.Amount.ToString("N2")</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="info-item">
                                                <div class="d-flex align-items-center">
                                                    <div class="info-icon bg-success me-2">
                                                        <i class="fas fa-check-circle"></i>
                                                    </div>
                                                    <div class="flex-grow-1">
                                                        <small class="text-muted d-block">Estado</small>
                                                        <span class="badge bg-success">@payment.PaymentStatus</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Payment Date -->
                                    <div class="mt-3 text-center p-2 bg-light rounded">
                                        <small class="text-muted d-block">Fecha de Pago</small>
                                        <span class="fw-medium text-primary">@payment.PaymentDate.ToString("dddd, dd 'de' MMMM 'de' yyyy")</span>
                                        <br>
                                        <small class="text-muted">@payment.PaymentDate.ToString("HH:mm")</small>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="card-footer bg-transparent border-0 pt-0">
                                <div class="d-grid gap-2">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@payment.Id" 
                                           class="btn btn-outline-primary btn-sm" title="Ver detalles">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="CreateEdit" asp-route-id="@payment.Id" 
                                           class="btn btn-outline-warning btn-sm" title="Editar">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-controller="Sales" asp-action="Details" asp-route-id="@payment.SaleId" 
                                           class="btn btn-outline-info btn-sm" title="Ver venta">
                                            <i class="fas fa-shopping-cart"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                title="Eliminar" onclick="confirmDelete(@payment.Id, '@payment.SaleNumber')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Statistics Section -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-primary mb-1">@Model.Count()</h4>
                                        <small class="text-muted">Total Pagos</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-success mb-1">$@Model.Sum(p => p.Amount).ToString("N2")</h4>
                                        <small class="text-muted">Total Recaudado</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-info mb-1">$@Model.Average(p => p.Amount).ToString("N2")</h4>
                                        <small class="text-muted">Promedio por Pago</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-warning mb-1">@Model.Where(p => p.PaymentDate.Date == DateTime.Today).Count()</h4>
                                        <small class="text-muted">Pagos Hoy</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Methods Distribution -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-chart-pie me-2"></i>Distribuci√≥n por M√©todo de Pago
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @{
                                    var cashCount = Model.Count(p => p.PaymentMethod == Database.Enum.PaymentMethodType.Cash);
                                    var cardCount = Model.Count(p => p.PaymentMethod == Database.Enum.PaymentMethodType.Card);
                                    var transferCount = Model.Count(p => p.PaymentMethod == Database.Enum.PaymentMethodType.Transfer);
                                    var totalCount = Model.Count();
                                }
                                <div class="col-md-4 text-center">
                                    <div class="method-stat">
                                        <div class="method-icon cash mb-2">
                                            <i class="fas fa-money-bill-wave fa-2x"></i>
                                        </div>
                                        <h5 class="mb-1">@cashCount</h5>
                                        <small class="text-muted">üíµ Efectivo (@(totalCount > 0 ? (cashCount * 100 / totalCount).ToString("F0") : "0")%)</small>
                                    </div>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="method-stat">
                                        <div class="method-icon card mb-2">
                                            <i class="fas fa-credit-card fa-2x"></i>
                                        </div>
                                        <h5 class="mb-1">@cardCount</h5>
                                        <small class="text-muted">üí≥ Tarjeta (@(totalCount > 0 ? (cardCount * 100 / totalCount).ToString("F0") : "0")%)</small>
                                    </div>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="method-stat">
                                        <div class="method-icon transfer mb-2">
                                            <i class="fas fa-exchange-alt fa-2x"></i>
                                        </div>
                                        <h5 class="mb-1">@transferCount</h5>
                                        <small class="text-muted">üè¶ Transferencia (@(totalCount > 0 ? (transferCount * 100 / totalCount).ToString("F0") : "0")%)</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="fas fa-credit-card text-muted" style="font-size: 4rem;"></i>
                </div>
                <h4 class="text-muted mb-3">No hay pagos registrados</h4>
                <p class="text-muted mb-4">Los pagos aparecer√°n aqu√≠ cuando se procesen transacciones</p>
                <div class="d-flex gap-2 justify-content-center">
                    <a asp-action="CreateEdit" class="btn btn-primary btn-lg">
                        <i class="fas fa-plus me-2"></i>Procesar Primer Pago
                    </a>
                    <a asp-controller="Sales" asp-action="Index" class="btn btn-outline-primary btn-lg">
                        <i class="fas fa-shopping-cart me-2"></i>Ver Ventas
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirmar Eliminaci√≥n
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">¬øEst√°s seguro de que deseas eliminar el pago de la venta:</p>
                <div class="alert alert-warning">
                    <strong id="saleNumberToDelete"></strong>
                </div>
                <p class="text-muted mb-0">Esta acci√≥n restaurar√° el stock de los productos y no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form asp-action="Delete" method="post" class="d-inline">
                    <input type="hidden" id="deletePaymentId" name="id" value="" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Eliminar Pago
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function() {
            filterPayments();
        });

        document.getElementById('paymentMethodFilter').addEventListener('change', function() {
            filterPayments();
        });

        document.getElementById('amountFilter').addEventListener('change', function() {
            filterPayments();
        });

        document.getElementById('dateFilter').addEventListener('change', function() {
            filterPayments();
        });

        function filterPayments() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const methodFilter = document.getElementById('paymentMethodFilter').value;
            const amountFilter = document.getElementById('amountFilter').value;
            const dateFilter = document.getElementById('dateFilter').value;
            const payments = document.querySelectorAll('.payment-card');

            payments.forEach(function(payment) {
                const customer = payment.getAttribute('data-customer');
                const sale = payment.getAttribute('data-sale');
                const method = payment.getAttribute('data-method');
                const amount = parseFloat(payment.getAttribute('data-amount'));
                const paymentDate = payment.getAttribute('data-date');

                let showPayment = true;

                // Search filter
                if (searchTerm && !customer.includes(searchTerm) && !sale.includes(searchTerm) && !method.includes(searchTerm)) {
                    showPayment = false;
                }

                // Method filter
                if (methodFilter && method !== methodFilter) {
                    showPayment = false;
                }

                // Amount filter
                if (amountFilter) {
                    switch(amountFilter) {
                        case 'low':
                            if (amount > 500) showPayment = false;
                            break;
                        case 'medium':
                            if (amount <= 500 || amount > 2000) showPayment = false;
                            break;
                        case 'high':
                            if (amount <= 2000) showPayment = false;
                            break;
                    }
                }

                // Date filter
                if (dateFilter && paymentDate !== dateFilter) {
                    showPayment = false;
                }

                payment.style.display = showPayment ? 'block' : 'none';
            });
        }

        function confirmDelete(paymentId, saleNumber) {
            document.getElementById('deletePaymentId').value = paymentId;
            document.getElementById('saleNumberToDelete').textContent = saleNumber;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        // Add hover effects
        document.querySelectorAll('.payment-item').forEach(function(card) {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-5px)';
                this.style.transition = 'transform 0.3s ease';
                this.classList.add('shadow-lg');
            });

            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
                this.classList.remove('shadow-lg');
            });
        });
    </script>

    <style>
        .payment-item {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .payment-item:hover {
            transform: translateY(-5px);
        }

        .payment-method-icon {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .info-icon {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
            color: white;
        }

        .info-item {
            padding: 0.5rem 0;
            border-bottom: 1px solid #f8f9fa;
        }

        .info-item:last-child {
            border-bottom: none;
        }

        .btn-group .btn {
            border-radius: 0;
        }

        .btn-group .btn:first-child {
            border-top-left-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
        }

        .btn-group .btn:last-child {
            border-top-right-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
        }

        .stat-item {
            padding: 1rem 0;
        }

        .method-stat {
            padding: 1rem;
        }

        .method-icon.cash {
            color: #198754;
        }

        .method-icon.card {
            color: #0d6efd;
        }

        .method-icon.transfer {
            color: #0dcaf0;
        }

        @@media (max-width: 768px) {
            .payment-card {
                margin-bottom: 1rem;
            }
            
            .btn-group .btn {
                font-size: 0.8rem;
                padding: 0.375rem 0.5rem;
            }
        }
    </style>
}

@functions {
    public string GetPaymentMethodHeaderClass(Database.Enum.PaymentMethodType method)
    {
        return method switch
        {
            Database.Enum.PaymentMethodType.Cash => "bg-success",
            Database.Enum.PaymentMethodType.Card => "bg-primary",
            Database.Enum.PaymentMethodType.Transfer => "bg-info",
            _ => "bg-secondary"
        };
    }

    public string GetPaymentMethodName(Database.Enum.PaymentMethodType method)
    {
        return method switch
        {
            Database.Enum.PaymentMethodType.Cash => "üíµ Efectivo",
            Database.Enum.PaymentMethodType.Card => "üí≥ Tarjeta",
            Database.Enum.PaymentMethodType.Transfer => "üè¶ Transferencia",
            _ => "Desconocido"
        };
    }
} 