@model Application.ViewModels.Payment.PaymentSaveViewModel

@{
    var isEdit = ViewBag.IsEdit as bool? ?? false;
    var pageTitle = ViewBag.PageTitle as string ?? (isEdit ? "Editar Pago" : "Nuevo Pago");
    ViewData["Title"] = pageTitle;

    var sales = ViewBag.Sales as IEnumerable<Database.Entities.Sale>;
    var paymentMethods = ViewBag.PaymentMethods as IEnumerable<Database.Enum.PaymentMethodType>;
    var paymentId = ViewBag.PaymentId as int? ?? 0;
}

<div class="row justify-content-center">
    <div class="col-lg-10 col-md-12">
        <div class="d-flex align-items-center mb-4">
            <a asp-action="Index" class="btn btn-outline-secondary me-3" title="Volver">
                <i class="fas fa-arrow-left"></i>
            </a>
            <div>
                <h2 class="h3 text-primary mb-1">
                    <i class="fas @(isEdit ? "fa-edit" : "fa-plus-circle") me-2"></i>@pageTitle
                </h2>
                <p class="text-muted mb-0">
                    @(isEdit
                        ? "Modifica los datos del pago"
                        : "Procesa un nuevo pago para una venta")
                </p>
            </div>
        </div>

        @* Alerts *@
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (!isEdit)
        {
            <div class="alert alert-info d-flex align-items-center mb-4" role="alert">
                <i class="fas fa-info-circle me-3"></i>
                <div>
                    <strong>Importante:</strong> Al procesar el pago, el stock de los productos se actualizar√° autom√°ticamente.
                </div>
            </div>
        }

        <div class="row g-4">
            <!-- Payment Form -->
            <div class="col-lg-8">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-success text-white py-3">
                <h5 class="card-title mb-0">
                    <i class="fas fa-credit-card me-2"></i>Informaci√≥n del Pago
                </h5>
            </div>
            <div class="card-body p-4">
                <form asp-action="CreateEdit"
                      method="post"
                      id="paymentForm"
                      novalidate>
                    @Html.AntiForgeryToken()
                            @if (isEdit)
                            {
                                <input type="hidden" name="id" value="@paymentId" />
                            }

                    <div class="row g-4">
                        @* Sale Selection *@
                        <div class="col-12">
                            <label asp-for="SaleId" class="form-label fw-medium">
                                <i class="fas fa-shopping-cart text-primary me-2"></i>Venta a Pagar
                            </label>
                            <select asp-for="SaleId"
                                            class="form-select"
                                    required
                                    id="saleSelect"
                                            disabled="@isEdit">
                <option value="">-- Selecciona una venta --</option>
                                @if (sales != null)
                                {
                                    foreach (var sale in sales)
                                    {
                            <option value="@sale.Id"
                                    data-total="@sale.TotalAmount"
                                    data-customer="@sale.Customer.Name"
                                    data-date="@sale.SaleDate.ToString("dd/MM/yyyy")"
                                                        data-items="@sale.Details?.Count">
                                                    Venta #@sale.Id.ToString("D4") - @sale.Customer.Name - $@sale.TotalAmount.ToString("N2")
                            </option>
                                    }
                                }
              </select>
                            @if (isEdit)
                            {
                                <input type="hidden" asp-for="SaleId" />
                            }
                            <span asp-validation-for="SaleId" class="text-danger small"></span>
                        </div>

                        @* Payment Method *@
                        <div class="col-md-6">
                            <label asp-for="PaymentMethod" class="form-label fw-medium">
                                        <i class="fas fa-money-bill text-success me-2"></i>M√©todo de Pago
                            </label>
                                    <select asp-for="PaymentMethod" class="form-select" required id="paymentMethodSelect">
                                <option value="">-- Selecciona m√©todo --</option>
                                @if (paymentMethods != null)
                                {
                                    foreach (var method in paymentMethods)
                                    {
                                                <option value="@method">
                                                    @switch(method.ToString())
                                            {
                                                        case "Cash":
                                                    <text>üíµ Efectivo</text>
                                                    break;
                                                        case "Card":
                                                            <text>üí≥ Tarjeta</text>
                                                    break;
                                                        case "Transfer":
                                                            <text>üè¶ Transferencia</text>
                                                    break;
                                            }
                                        </option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="PaymentMethod" class="text-danger small"></span>
                        </div>

                                @* Amount *@
                        <div class="col-md-6">
                            <label asp-for="Amount" class="form-label fw-medium">
                                        <i class="fas fa-dollar-sign text-success me-2"></i>Monto a Pagar
                            </label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="Amount" type="number" step="0.01" min="0.01" 
                                               class="form-control" id="amountInput" readonly />
                            </div>
                            <span asp-validation-for="Amount" class="text-danger small"></span>
                        </div>

                        @* Payment Date *@
                                <div class="col-md-6">
                            <label asp-for="PaymentDate" class="form-label fw-medium">
                                        <i class="fas fa-calendar text-info me-2"></i>Fecha de Pago
                                    </label>
                                    <input asp-for="PaymentDate" type="datetime-local" class="form-control" required />
                                    <span asp-validation-for="PaymentDate" class="text-danger small"></span>
                                </div>

                                @* Reference Number (for Card/Transfer) *@
                                <div class="col-md-6" id="referenceSection" style="display: none;">
                                    <label class="form-label fw-medium">
                                        <i class="fas fa-hashtag text-warning me-2"></i>N√∫mero de Referencia
                                    </label>
                                    <input type="text" class="form-control" id="referenceInput" 
                                           placeholder="N√∫mero de transacci√≥n o referencia" />
                                    <small class="text-muted">Opcional: Para seguimiento de la transacci√≥n</small>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="row mt-4">
                                <div class="col-12">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a asp-action="Index" class="btn btn-outline-secondary">
                                            <i class="fas fa-times me-2"></i>Cancelar
                                        </a>
                                        <div class="d-flex gap-2">
                                            @if (isEdit)
                                            {
                                                <a asp-action="Details" asp-route-id="@paymentId" class="btn btn-outline-info">
                                                    <i class="fas fa-eye me-2"></i>Ver Detalles
                                                </a>
                                            }
                                            <button type="submit" class="btn btn-success" id="submitBtn" disabled>
                                                <i class="fas @(isEdit ? "fa-save" : "fa-credit-card") me-2"></i>
                                                <span id="submitText">@(isEdit ? "Actualizar Pago" : "Procesar Pago")</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Sale Details Panel -->
            <div class="col-lg-4">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-primary text-white py-3">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-receipt me-2"></i>Detalles de la Venta
                        </h5>
                    </div>
                    <div class="card-body" id="saleDetailsPanel">
                        <div class="text-center py-4">
                            <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                            <h6 class="text-muted">Selecciona una venta para ver los detalles</h6>
                        </div>
                        </div>
                    </div>

                <!-- Payment Method Info -->
                <div class="card shadow-sm border-0 mt-3">
                    <div class="card-header bg-light">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-info-circle me-2"></i>Informaci√≥n del M√©todo de Pago
                        </h6>
                    </div>
                    <div class="card-body" id="paymentMethodInfo">
                        <div class="text-center py-3">
                            <i class="fas fa-credit-card fa-2x text-muted mb-2"></i>
                            <small class="text-muted">Selecciona un m√©todo de pago</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        let selectedSale = null;
        let selectedPaymentMethod = null;

        // Sale selection change
        document.getElementById('saleSelect').addEventListener('change', function() {
            const saleId = this.value;
            if (saleId) {
            const selectedOption = this.options[this.selectedIndex];
                selectedSale = {
                    id: saleId,
                    total: parseFloat(selectedOption.dataset.total),
                    customer: selectedOption.dataset.customer,
                    date: selectedOption.dataset.date,
                    items: parseInt(selectedOption.dataset.items) || 0
                };
                
                updateSaleDetails();
                updateAmount();
                updateSubmitButton();
            } else {
                selectedSale = null;
                clearSaleDetails();
                updateSubmitButton();
            }
        });

        // Payment method change
        document.getElementById('paymentMethodSelect').addEventListener('change', function() {
            const method = this.value;
            selectedPaymentMethod = method;
            
            updatePaymentMethodInfo();
            updateReferenceSection();
            updateSubmitButton();
        });

        // Payment status change
        document.getElementById('statusSelect').addEventListener('change', function() {
            updateSubmitButton();
        });

        function updateSaleDetails() {
            const panel = document.getElementById('saleDetailsPanel');
            if (selectedSale) {
                panel.innerHTML = `
                    <div class="sale-info">
                        <div class="text-center mb-3">
                            <div class="bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-2" style="width: 60px; height: 60px;">
                                <i class="fas fa-shopping-cart fa-lg"></i>
                            </div>
                            <h6 class="mb-1">Venta #${selectedSale.id.toString().padStart(4, '0')}</h6>
                            <small class="text-muted">${selectedSale.date}</small>
                        </div>
                        
                        <div class="sale-details">
                            <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                                <span class="text-muted">Cliente:</span>
                                <span class="fw-bold">${selectedSale.customer}</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                                <span class="text-muted">Productos:</span>
                                <span class="fw-bold">${selectedSale.items} items</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center py-2">
                                <span class="text-muted">Total:</span>
                                <span class="fw-bold text-success fs-5">$${selectedSale.total.toFixed(2)}</span>
                            </div>
                        </div>
                    </div>
                `;
            }
        }

        function clearSaleDetails() {
            const panel = document.getElementById('saleDetailsPanel');
            panel.innerHTML = `
                <div class="text-center py-4">
                    <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                    <h6 class="text-muted">Selecciona una venta para ver los detalles</h6>
                </div>
            `;
        }

        function updatePaymentMethodInfo() {
            const infoPanel = document.getElementById('paymentMethodInfo');
            if (selectedPaymentMethod) {
                let icon, title, description, color;
                
                switch(selectedPaymentMethod) {
                    case 'Cash':
                        icon = 'fa-money-bill-wave';
                        title = 'Pago en Efectivo';
                        description = 'Pago realizado con dinero en efectivo. Aseg√∫rate de tener el cambio exacto.';
                        color = 'text-success';
                        break;
                    case 'Card':
                        icon = 'fa-credit-card';
                        title = 'Pago con Tarjeta';
                        description = 'Pago realizado con tarjeta de cr√©dito o d√©bito. Se procesar√° autom√°ticamente.';
                        color = 'text-primary';
                        break;
                    case 'Transfer':
                        icon = 'fa-university';
                        title = 'Transferencia Bancaria';
                        description = 'Pago realizado por transferencia bancaria. Verifica el comprobante.';
                        color = 'text-warning';
                        break;
                }
                
                infoPanel.innerHTML = `
                    <div class="text-center mb-3">
                        <i class="fas ${icon} fa-2x ${color} mb-2"></i>
                        <h6 class="mb-1">${title}</h6>
                        <small class="text-muted">${description}</small>
                    </div>
                `;
            } else {
                infoPanel.innerHTML = `
                    <div class="text-center py-3">
                        <i class="fas fa-credit-card fa-2x text-muted mb-2"></i>
                        <small class="text-muted">Selecciona un m√©todo de pago</small>
                    </div>
                `;
            }
        }

        function updateReferenceSection() {
            const referenceSection = document.getElementById('referenceSection');
            const referenceInput = document.getElementById('referenceInput');
            
            if (selectedPaymentMethod === 'Card' || selectedPaymentMethod === 'Transfer') {
                referenceSection.style.display = 'block';
                referenceInput.required = true;
            } else {
                referenceSection.style.display = 'none';
                referenceInput.required = false;
                referenceInput.value = '';
            }
        }

        function updateAmount() {
            const amountInput = document.getElementById('amountInput');
            if (selectedSale) {
                amountInput.value = selectedSale.total.toFixed(2);
            } else {
                amountInput.value = '';
            }
        }

        function updateSubmitButton() {
            const submitBtn = document.getElementById('submitBtn');
            const submitText = document.getElementById('submitText');
            const saleSelected = selectedSale !== null;
            const methodSelected = selectedPaymentMethod !== null;
            const statusSelected = document.getElementById('statusSelect').value !== '';
            
            if (saleSelected && methodSelected && statusSelected) {
                submitBtn.disabled = false;
                submitBtn.classList.remove('btn-secondary');
                submitBtn.classList.add('btn-success');
                submitText.textContent = isEdit ? 'Actualizar Pago' : 'Procesar Pago';
            } else {
                submitBtn.disabled = true;
                submitBtn.classList.remove('btn-success');
                submitBtn.classList.add('btn-secondary');
                submitText.textContent = 'Completa los campos requeridos';
            }
        }

        // Form validation
        document.getElementById('paymentForm').addEventListener('submit', function(e) {
            if (!selectedSale) {
                e.preventDefault();
                alert('Debe seleccionar una venta para procesar el pago.');
                return false;
            }
            
            if (!selectedPaymentMethod) {
                e.preventDefault();
                alert('Debe seleccionar un m√©todo de pago.');
                return false;
            }
            
            const status = document.getElementById('statusSelect').value;
            if (!status) {
                e.preventDefault();
                alert('Debe seleccionar un estado de pago.');
                return false;
            }

            const amount = parseFloat(document.getElementById('amountInput').value);
            if (isNaN(amount) || amount <= 0) {
                e.preventDefault();
                alert('El monto debe ser mayor a 0.');
                return false;
            }

            if (amount !== selectedSale.total) {
                e.preventDefault();
                if (!confirm(`El monto ingresado ($${amount.toFixed(2)}) no coincide con el total de la venta ($${selectedSale.total.toFixed(2)}). ¬øDesea continuar?`)) {
                    return false;
                }
            }
        });

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            updateSubmitButton();
            
            // Set current date and time for payment date
            const now = new Date();
            const localDateTime = new Date(now.getTime() - now.getTimezoneOffset() * 60000).toISOString().slice(0, 16);
            document.querySelector('[name="PaymentDate"]').value = localDateTime;
        });
    </script>

    <style>
        .sale-info {
            transition: all 0.3s ease;
        
        .form-control:focus, .form-select:focus {
            border-color: var(--bs-success);
            box-shadow: 0 0 0 0.2rem rgba(25, 135, 84, 0.25);
        }
        
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
    </style>
} 
}