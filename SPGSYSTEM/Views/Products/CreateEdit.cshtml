@model Application.ViewModels.Product.ProductSaveViewModel

@{
    var isEdit = ViewBag.IsEdit as bool? ?? false;
    var pageTitle = ViewBag.PageTitle as string ?? (isEdit ? "Editar Producto" : "Nuevo Producto");
    ViewData["Title"] = pageTitle;
    var productId = ViewBag.ProductId as int? ?? 0;
    var originalStock = ViewBag.OriginalStock as int? ?? 0;
}

<div class="row justify-content-center">
    <div class="col-lg-8 col-md-10">
        <div class="d-flex align-items-center mb-4">
            <a asp-action="Index" class="btn btn-outline-secondary me-3" title="Volver">
                <i class="fas fa-arrow-left"></i>
            </a>
            <div>
                <h2 class="h3 text-primary mb-1">
                    <i class="fas @(isEdit ? "fa-edit" : "fa-plus-circle") me-2"></i>@pageTitle
                </h2>
                <p class="text-muted mb-0">@(isEdit ? "Modifica los datos del producto" : "Agrega un nuevo producto al inventario")</p>
            </div>
        </div>

        <!-- Alert Messages -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (isEdit && originalStock != Model?.Stock)
        {
            <div class="alert alert-info d-flex align-items-center mb-4" role="alert">
                <i class="fas fa-info-circle me-3"></i>
                <div>
                    <strong>Cambio de Stock Detectado:</strong> 
                    Stock anterior: @originalStock → Stock actual: @Model?.Stock 
                    (Diferencia: @((Model?.Stock ?? 0) - originalStock))
                </div>
            </div>
        }

        <!-- Form Card -->
        <div class="card shadow-sm border-0">
            <div class="card-header bg-primary text-white py-3">
                <h5 class="card-title mb-0">
                    <i class="fas fa-box me-2"></i>Información del Producto
                </h5>
            </div>
            
            <div class="card-body p-4">
                <form asp-action="CreateEdit" asp-route-id="@(isEdit ? productId : (int?)null)" method="post" id="productForm" novalidate>
                    @Html.AntiForgeryToken()
                    
                    <div class="row g-4">
                        <!-- Product Name -->
                        <div class="col-12">
                            <label asp-for="Name" class="form-label fw-medium">
                                <i class="fas fa-tag text-primary me-2"></i>Nombre del Producto
                            </label>
                            <input asp-for="Name" type="text" class="form-control form-control-lg" 
                                   placeholder="Ej: Laptop Dell Inspiron 15" maxlength="100" />
                            <span asp-validation-for="Name" class="text-danger small"></span>
                        </div>

                        <!-- Description -->
                        <div class="col-12">
                            <label asp-for="Description" class="form-label fw-medium">
                                <i class="fas fa-align-left text-primary me-2"></i>Descripción
                            </label>
                            <textarea asp-for="Description" class="form-control" rows="3" 
                                      placeholder="Descripción detallada del producto..."></textarea>
                            <span asp-validation-for="Description" class="text-danger small"></span>
                        </div>

                        <!-- Price and Stock Row -->
                        <div class="col-md-6">
                            <label asp-for="Price" class="form-label fw-medium">
                                <i class="fas fa-dollar-sign text-primary me-2"></i>Precio Unitario
                            </label>
                            <div class="input-group input-group-lg">
                                <span class="input-group-text">$</span>
                                <input asp-for="Price" type="number" step="0.01" min="0.01" 
                                       class="form-control" placeholder="0.00" id="priceInput" />
                            </div>
                            <span asp-validation-for="Price" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="Stock" class="form-label fw-medium">
                                <i class="fas fa-boxes text-primary me-2"></i>Cantidad en Stock
                            </label>
                            <div class="input-group input-group-lg">
                                <input asp-for="Stock" type="number" min="0" 
                                       class="form-control" placeholder="0" id="stockInput" />
                                <span class="input-group-text">
                                    <i class="fas fa-cube"></i>
                                </span>
                            </div>
                            <span asp-validation-for="Stock" class="text-danger small"></span>
                            @if (isEdit && originalStock > 0)
                            {
                                <small class="text-muted">Stock anterior: @originalStock unidades</small>
                            }
                        </div>
                    </div>

                    <!-- Stock Management Section (Only for Edit) -->
                    @if (isEdit)
                    {
                        <div class="card bg-light border-0 mt-4">
                            <div class="card-header bg-warning text-dark">
                                <h6 class="mb-0">
                                    <i class="fas fa-warehouse me-2"></i>Gestión Rápida de Stock
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-md-8">
                                        <h6 class="mb-1">¿Necesitas agregar más stock?</h6>
                                        <small class="text-muted">Usa la función de agregar stock para incrementar fácilmente el inventario</small>
                                    </div>
                                    <div class="col-md-4 text-end">
                                        <a asp-action="AddStock" asp-route-id="@productId" class="btn btn-outline-success">
                                            <i class="fas fa-plus me-2"></i>Agregar Stock
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Action Buttons -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="d-flex justify-content-between align-items-center">
                                <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                                    <i class="fas fa-times me-2"></i>Cancelar
                                </a>
                                <div class="d-flex gap-2">
                                    @if (isEdit)
                                    {
                                        <a asp-action="Details" asp-route-id="@productId" class="btn btn-outline-info btn-lg">
                                            <i class="fas fa-eye me-2"></i>Ver Detalles
                                        </a>
                                        <a asp-action="AddStock" asp-route-id="@productId" class="btn btn-outline-success btn-lg">
                                            <i class="fas fa-plus me-2"></i>Agregar Stock
                                        </a>
                                    }
                                    <button type="submit" class="btn btn-primary btn-lg" id="submitBtn">
                                        <i class="fas @(isEdit ? "fa-save" : "fa-plus") me-2"></i>
                                        <span id="submitText">@(isEdit ? "Actualizar Producto" : "Crear Producto")</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Product Preview (only when creating) -->
        @if (!isEdit)
        {
            <div class="card shadow-sm border-0 mt-4" id="productPreview" style="display: none;">
                <div class="card-header bg-light">
                    <h6 class="card-title mb-0 text-muted">
                        <i class="fas fa-eye me-2"></i>Vista Previa del Producto
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="product-icon me-3">
                            <i class="fas fa-box fa-2x text-primary"></i>
                        </div>
                        <div class="flex-grow-1">
                            <h5 class="mb-1" id="previewName">Nombre del producto</h5>
                            <p class="text-muted mb-2" id="previewDescription">Descripción del producto</p>
                            <div class="d-flex gap-3">
                                <span class="badge bg-success fs-6" id="previewPrice">$0.00</span>
                                <span class="badge bg-info fs-6" id="previewStock">0 en stock</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Help Section -->
        <div class="card shadow-sm border-0 mt-4">
            <div class="card-header bg-light">
                <h6 class="card-title mb-0 text-muted">
                    <i class="fas fa-lightbulb me-2"></i>Información Útil
                </h6>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="d-flex">
                            <div class="flex-shrink-0">
                                <i class="fas fa-info-circle text-primary me-2"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">Gestión de Stock</h6>
                                <small class="text-muted">
                                    El stock se actualiza automáticamente cuando se @(isEdit ? "edita el producto" : "crea el producto") o se realizan ventas.
                                </small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="d-flex">
                            <div class="flex-shrink-0">
                                <i class="fas fa-tag text-success me-2"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">Precios</h6>
                                <small class="text-muted">
                                    El precio se mostrará en todas las ventas y puede modificarse cuando sea necesario.
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        let isEdit = @(isEdit.ToString().ToLower());
        let originalStock = @originalStock;

        // Form field change detection
        const formFields = ['Name', 'Description', 'Price', 'Stock'];
        let hasChanges = false;

        formFields.forEach(field => {
            const element = document.querySelector(`[name="${field}"]`);
            if (element) {
                element.addEventListener('input', function() {
                    updatePreview();
                    detectChanges();
                });
            }
        });

        function updatePreview() {
            if (!isEdit) {
                const name = document.querySelector('[name="Name"]').value || 'Nombre del producto';
                const description = document.querySelector('[name="Description"]').value || 'Descripción del producto';
                const price = parseFloat(document.querySelector('[name="Price"]').value) || 0;
                const stock = parseInt(document.querySelector('[name="Stock"]').value) || 0;

                document.getElementById('previewName').textContent = name;
                document.getElementById('previewDescription').textContent = description;
                document.getElementById('previewPrice').textContent = `$${price.toFixed(2)}`;
                document.getElementById('previewStock').textContent = `${stock} en stock`;

                // Show preview if any field has content
                if (name !== 'Nombre del producto' || description !== 'Descripción del producto' || price > 0 || stock > 0) {
                    document.getElementById('productPreview').style.display = 'block';
                } else {
                    document.getElementById('productPreview').style.display = 'none';
                }
            }
        }

        function detectChanges() {
            const submitBtn = document.getElementById('submitBtn');
            const submitText = document.getElementById('submitText');
            
            // Check if any field has been filled (for create) or changed (for edit)
            const name = document.querySelector('[name="Name"]').value;
            const description = document.querySelector('[name="Description"]').value;
            const price = document.querySelector('[name="Price"]').value;
            const stock = parseInt(document.querySelector('[name="Stock"]').value) || 0;

            if (isEdit) {
                // For edit, check if stock changed
                const stockChanged = stock !== originalStock;
                
                if (stockChanged) {
                    const difference = stock - originalStock;
                    if (difference > 0) {
                        submitText.innerHTML = `<i class="fas fa-save me-2"></i>Guardar (+${difference} stock)`;
                        submitBtn.classList.remove('btn-primary');
                        submitBtn.classList.add('btn-success');
                    } else if (difference < 0) {
                        submitText.innerHTML = `<i class="fas fa-save me-2"></i>Guardar (${difference} stock)`;
                        submitBtn.classList.remove('btn-primary');
                        submitBtn.classList.add('btn-warning');
                    } else {
                        submitText.innerHTML = '<i class="fas fa-save me-2"></i>Actualizar Producto';
                        submitBtn.classList.remove('btn-success', 'btn-warning');
                        submitBtn.classList.add('btn-primary');
                    }
                }
            } else {
                // For create, enable button if required fields are filled
                if (name && price && stock >= 0) {
                    submitBtn.disabled = false;
                    submitBtn.classList.remove('btn-secondary');
                    submitBtn.classList.add('btn-primary');
                } else {
                    submitBtn.disabled = true;
                    submitBtn.classList.remove('btn-primary');
                    submitBtn.classList.add('btn-secondary');
                }
            }
        }

        // Validate price input
        document.getElementById('priceInput').addEventListener('input', function() {
            const value = parseFloat(this.value);
            if (isNaN(value) || value <= 0) {
                this.setCustomValidity('El precio debe ser mayor a 0');
            } else {
                this.setCustomValidity('');
            }
        });

        // Validate stock input
        document.getElementById('stockInput').addEventListener('input', function() {
            const value = parseInt(this.value);
            if (isNaN(value) || value < 0) {
                this.setCustomValidity('El stock debe ser 0 o mayor');
            } else {
                this.setCustomValidity('');
            }
        });

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            detectChanges();
            updatePreview();
        });

        // Form validation before submit
        document.getElementById('productForm').addEventListener('submit', function(e) {
            const name = document.querySelector('[name="Name"]').value.trim();
            const price = parseFloat(document.querySelector('[name="Price"]').value);
            const stock = parseInt(document.querySelector('[name="Stock"]').value);

            if (!name) {
                e.preventDefault();
                alert('El nombre del producto es obligatorio.');
                return false;
            }

            if (isNaN(price) || price <= 0) {
                e.preventDefault();
                alert('El precio debe ser mayor a 0.');
                return false;
            }

            if (isNaN(stock) || stock < 0) {
                e.preventDefault();
                alert('El stock debe ser 0 o mayor.');
                return false;
            }
        });
    </script>

    <style>
        .form-control:focus, .form-select:focus {
            border-color: var(--bs-primary);
            box-shadow: 0 0 0 0.2rem rgba(var(--bs-primary-rgb), 0.25);
        }
        
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .input-group-lg .input-group-text {
            font-size: 1.25rem;
            font-weight: 600;
        }

        .product-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: rgba(var(--bs-primary-rgb), 0.1);
        }

        .alert-info {
            border-left: 4px solid #0dcaf0;
        }

        @@media (max-width: 768px) {
            .d-flex.justify-content-between {
                flex-direction: column;
                gap: 1rem;
            }
            
            .d-flex.gap-2 {
                justify-content: center;
            }
        }
    </style>
} 