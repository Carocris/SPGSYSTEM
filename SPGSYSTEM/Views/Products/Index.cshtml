@model IEnumerable<Application.ViewModels.Product.ProductViewModel>

@{
    ViewData["Title"] = "Gestión de Productos";
}

<div class="row">
    <div class="col-12">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div>
                <h3 class="h4 text-primary mb-1">
                    <i class="fas fa-box-open me-2"></i>Gestión de Productos
                </h3>
                <p class="text-muted mb-0 small">Administra tu inventario de productos</p>
            </div>
            <a asp-action="Create" class="btn btn-success btn-sm">
                <i class="fas fa-plus me-2"></i>Nuevo Producto
            </a>
        </div>

        <!-- Alert Messages -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Search and Filter Section -->
        <div class="card shadow-sm mb-3">
            <div class="card-body p-3">
                <div class="row g-2">
                    <div class="col-md-4">
                        <div class="input-group input-group-sm">
                            <span class="input-group-text bg-light">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input type="text" class="form-control" id="searchInput" placeholder="Buscar productos...">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select form-select-sm" id="categoryFilter">
                            <option value="">Todas las categorías</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select form-select-sm" id="supplierFilter">
                            <option value="">Todos los proveedores</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select form-select-sm" id="stockFilter">
                            <option value="available" selected>En stock</option>
                            <option value="all">Todos los stocks</option>
                            <option value="low">Stock bajo</option>
                            <option value="out">Sin stock</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select form-select-sm" id="priceFilter">
                            <option value="">Todos los precios</option>
                            <option value="low">$0 - $50</option>
                            <option value="medium">$50 - $200</option>
                            <option value="high">$200+</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-outline-secondary btn-sm w-100" id="clearFilters">
                            <i class="fas fa-times me-1"></i>Limpiar
                        </button>
                    </div>
                </div>
            </div>
        </div>

        @if (Model != null && Model.Any())
        {
            <!-- Products Table -->
            <div class="card shadow-sm">
                <div class="card-header bg-light py-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">
                            <i class="fas fa-table me-2"></i>Lista de Productos
                        </h6>
                        <div>
                            <span class="badge bg-primary" id="productCount">@Model.Count() productos</span>
                            <small class="text-muted ms-2" id="filterInfo"></small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover table-sm mb-0" id="productsTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-hashtag me-1"></i>ID
                                    </th>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-box me-1"></i>Producto
                                    </th>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-tag me-1"></i>Categoría
                                    </th>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-truck me-1"></i>Proveedor
                                    </th>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-boxes me-1"></i>Stock
                                    </th>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-dollar-sign me-1"></i>Precio Compra
                                    </th>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-dollar-sign me-1"></i>Precio Venta
                                    </th>
                                    <th class="border-0 py-2">
                                        <i class="fas fa-percentage me-1"></i>Margen
                                    </th>
                                    <th class="border-0 text-center py-2">
                                        <i class="fas fa-cogs me-1"></i>Acciones
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var product in Model)
                                {
                                    <tr class="product-row"
                                        data-name="@product.Name.ToLower()"
                                        data-code="@product.Code.ToLower()"
                                        data-description="@(product.Description?.ToLower() ?? "")"
                                        data-price="@product.SalePrice"
                                        data-stock="@product.Stock"
                                        data-minimum-stock="@product.MinimumStock"
                                        data-category="@(product.CategoryName?.ToLower() ?? "")"
                                        data-supplier="@(product.SupplierName?.ToLower() ?? "")">
                                        <td class="align-middle py-2">
                                            <span class="badge bg-secondary small">#@product.Id.ToString("D4")</span>
                                        </td>
                                        <td class="align-middle py-2">
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-circle bg-primary text-white rounded-circle me-2 d-flex align-items-center justify-content-center" style="width: 30px; height: 30px;">
                                                    <i class="fas fa-box fa-sm"></i>
                                                </div>
                                                <div>
                                                    <strong class="text-primary small">@product.Name</strong>
                                                    <br><small class="text-muted">@product.Code</small>
                                                    @if (!string.IsNullOrEmpty(product.Description))
                                                    {
                                                        <br><small class="text-muted text-truncate" title="@product.Description">@product.Description</small>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle py-2">
                                            @if (!string.IsNullOrWhiteSpace(product.CategoryName))
                                            {
                                                <span class="badge bg-secondary small">@product.CategoryName</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted fst-italic small">Sin categoría</span>
                                            }
                                        </td>
                                        <td class="align-middle py-2">
                                            @if (!string.IsNullOrWhiteSpace(product.SupplierName))
                                            {
                                                <div class="d-flex align-items-center">
                                                    <i class="fas fa-truck text-info me-1 fa-sm"></i>
                                                    <small>@product.SupplierName</small>
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="text-muted fst-italic small">Sin proveedor</span>
                                            }
                                        </td>
                                        <td class="align-middle py-2">
                                            @if (product.Stock <= 0)
                                            {
                                                <span class="badge bg-danger small">
                                                    <i class="fas fa-exclamation-triangle me-1"></i>Sin Stock
                                                </span>
                                            }
                                            else if (product.IsLowStock)
                                            {
                                                <span class="badge bg-warning small">
                                                    <i class="fas fa-exclamation-circle me-1"></i>@product.Stock
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success small">
                                                    <i class="fas fa-check-circle me-1"></i>@product.Stock
                                                </span>
                                            }
                                        </td>
                                        <td class="align-middle py-2">
                                            <small class="text-muted">$@product.PurchasePrice.ToString("N2")</small>
                                        </td>
                                        <td class="align-middle py-2">
                                            <small class="fw-bold text-success">$@product.SalePrice.ToString("N2")</small>
                                        </td>
                                        <td class="align-middle py-2">
                                            <span class="badge @(product.ProfitMargin >= 30 ? "bg-success" : product.ProfitMargin >= 15 ? "bg-warning" : "bg-danger") small">
                                                @product.ProfitMargin.ToString("F0")%
                                            </span>
                                        </td>
                                        <td class="align-middle py-2">
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a asp-action="Details" asp-route-id="@product.Id"
                                                   class="btn btn-outline-primary btn-sm" title="Ver detalles">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@product.Id" 
                                                   class="btn btn-outline-warning btn-sm" title="Editar">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a asp-action="AddStock" asp-route-id="@product.Id"
                                                   class="btn btn-outline-success btn-sm" title="Agregar stock">
                                                    <i class="fas fa-plus"></i>
                                                </a>
                                                <button type="button" class="btn btn-outline-danger btn-sm"
                                                        onclick="confirmDelete(@product.Id, '@product.Name')" title="Eliminar">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Statistics Section -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-primary mb-1">@Model.Count()</h4>
                                        <small class="text-muted">Total Productos</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-success mb-1">@Model.Count(p => p.Stock > 0)</h4>
                                        <small class="text-muted">En Stock</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-warning mb-1">@Model.Count(p => p.IsLowStock)</h4>
                                        <small class="text-muted">Stock Bajo</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="stat-item">
                                        <h4 class="text-danger mb-1">@Model.Count(p => p.Stock <= 0)</h4>
                                        <small class="text-muted">Sin Stock</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="fas fa-box-open text-muted" style="font-size: 4rem;"></i>
                </div>
                <h4 class="text-muted mb-3">No hay productos registrados</h4>
                <p class="text-muted mb-4">Comienza agregando tu primer producto al inventario</p>
                <a asp-action="Create" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus me-2"></i>Agregar Primer Producto
                </a>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirmar Eliminación
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">¿Estás seguro de que deseas eliminar el producto:</p>
                <div class="alert alert-warning">
                    <strong id="productNameToDelete"></strong>
                </div>
                <p class="text-muted mb-0">Esta acción eliminará toda la información del producto y no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form asp-action="Delete" method="post" class="d-inline">
                    <input type="hidden" id="deleteProductId" name="id" value="" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Eliminar Producto
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function() {
            filterProducts();
        });

        document.getElementById('categoryFilter').addEventListener('change', function() {
            filterProducts();
        });

        document.getElementById('supplierFilter').addEventListener('change', function() {
            filterProducts();
        });

        document.getElementById('stockFilter').addEventListener('change', function() {
            filterProducts();
        });

        document.getElementById('priceFilter').addEventListener('change', function() {
            filterProducts();
        });

        document.getElementById('clearFilters').addEventListener('click', function() {
            // Limpiar todos los filtros
            document.getElementById('searchInput').value = '';
            document.getElementById('categoryFilter').value = '';
            document.getElementById('supplierFilter').value = '';
            document.getElementById('stockFilter').value = 'available';
            document.getElementById('priceFilter').value = '';
            
            // Aplicar filtros
            filterProducts();
        });

        // Load categories and suppliers for filters
        document.addEventListener('DOMContentLoaded', function() {
            loadCategoriesAndSuppliers();
        });

        function loadCategoriesAndSuppliers() {
            // Load categories
            fetch('@Url.Action("GetCategories", "Products")')
                .then(response => response.json())
                .then(data => {
                    const categorySelect = document.getElementById('categoryFilter');
                    data.forEach(category => {
                        const option = document.createElement('option');
                        option.value = category.name.toLowerCase();
                        option.textContent = category.name;
                        categorySelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Error loading categories:', error));

            // Load suppliers
            fetch('@Url.Action("GetSuppliers", "Products")')
                .then(response => response.json())
                .then(data => {
                    const supplierSelect = document.getElementById('supplierFilter');
                    data.forEach(supplier => {
                        const option = document.createElement('option');
                        option.value = supplier.name.toLowerCase();
                        option.textContent = supplier.name;
                        supplierSelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Error loading suppliers:', error));
        }

        function filterProducts() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const categoryFilter = document.getElementById('categoryFilter').value;
            const supplierFilter = document.getElementById('supplierFilter').value;
            const stockFilter = document.getElementById('stockFilter').value;
            const priceFilter = document.getElementById('priceFilter').value;
            const products = document.querySelectorAll('.product-row');

            products.forEach(function(product) {
                const name = product.getAttribute('data-name');
                const code = product.getAttribute('data-code');
                const description = product.getAttribute('data-description');
                const price = parseFloat(product.getAttribute('data-price'));
                const stock = parseInt(product.getAttribute('data-stock'));
                const minimumStock = parseInt(product.getAttribute('data-minimum-stock'));
                const category = product.getAttribute('data-category');
                const supplier = product.getAttribute('data-supplier');

                let showProduct = true;

                // Search filter
                if (searchTerm && !name.includes(searchTerm) && !code.includes(searchTerm) && !description.includes(searchTerm)) {
                    showProduct = false;
                }

                // Category filter
                if (categoryFilter && category !== categoryFilter.toLowerCase()) {
                    showProduct = false;
                }

                // Supplier filter
                if (supplierFilter && supplier !== supplierFilter.toLowerCase()) {
                    showProduct = false;
                }

                // Stock filter
                if (stockFilter) {
                    switch(stockFilter) {
                        case 'available':
                            // Solo productos con stock > 0
                            if (stock <= 0) showProduct = false;
                            break;
                        case 'low':
                            // Solo productos con stock bajo (stock <= minimumStock)
                            if (stock > minimumStock || stock <= 0) showProduct = false;
                            break;
                        case 'out':
                            // Solo productos sin stock (stock = 0)
                            if (stock > 0) showProduct = false;
                            break;
                        case 'all':
                            // Mostrar todos los productos (no filtrar por stock)
                            break;
                    }
                }

                // Price filter
                if (priceFilter) {
                    switch(priceFilter) {
                        case 'low':
                            if (price > 50) showProduct = false;
                            break;
                        case 'medium':
                            if (price < 50 || price > 200) showProduct = false;
                            break;
                        case 'high':
                            if (price < 200) showProduct = false;
                            break;
                    }
                }

                product.style.display = showProduct ? 'table-row' : 'none';
            });
            
            // Actualizar contador de productos mostrados
            updateProductCount();
        }
        
        function updateProductCount() {
            const visibleProducts = document.querySelectorAll('.product-row[style*="table-row"]').length;
            const totalProducts = document.querySelectorAll('.product-row').length;
            const productCountElement = document.getElementById('productCount');
            const filterInfoElement = document.getElementById('filterInfo');
            
            productCountElement.textContent = `${visibleProducts} productos`;
            
            // Mostrar información del filtro si hay filtros activos
            const searchTerm = document.getElementById('searchInput').value;
            const categoryFilter = document.getElementById('categoryFilter').value;
            const supplierFilter = document.getElementById('supplierFilter').value;
            const stockFilter = document.getElementById('stockFilter').value;
            const priceFilter = document.getElementById('priceFilter').value;
            
            let filterInfo = [];
            if (searchTerm) filterInfo.push(`búsqueda: "${searchTerm}"`);
            if (categoryFilter) filterInfo.push(`categoría: "${categoryFilter}"`);
            if (supplierFilter) filterInfo.push(`proveedor: "${supplierFilter}"`);
            if (stockFilter && stockFilter !== 'available') {
                const stockLabels = {
                    'all': 'todos los stocks',
                    'low': 'stock bajo',
                    'out': 'sin stock'
                };
                filterInfo.push(`stock: ${stockLabels[stockFilter]}`);
            }
            if (priceFilter) {
                const priceLabels = {
                    'low': '$0 - $50',
                    'medium': '$50 - $200',
                    'high': '$200+'
                };
                filterInfo.push(`precio: ${priceLabels[priceFilter]}`);
            }
            
            if (filterInfo.length > 0) {
                filterInfoElement.textContent = `Filtrado por: ${filterInfo.join(', ')}`;
            } else {
                filterInfoElement.textContent = '';
            }
        }

        function confirmDelete(productId, productName) {
            document.getElementById('deleteProductId').value = productId;
            document.getElementById('productNameToDelete').textContent = productName;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        // Add hover effects
        document.querySelectorAll('.product-row').forEach(function(row) {
            row.addEventListener('mouseenter', function() {
                this.classList.add('table-active');
            });

            row.addEventListener('mouseleave', function() {
                this.classList.remove('table-active');
            });
        });
    </script>

    <style>
        .avatar-circle {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.9rem;
            color: #6c757d;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.1) !important;
        }

        .btn-group .btn {
            border-radius: 0;
        }

        .btn-group .btn:first-child {
            border-top-left-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
        }

        .btn-group .btn:last-child {
            border-top-right-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
        }

        .stat-item {
            padding: 1rem 0;
        }

        .table-responsive {
            border-radius: 0.375rem;
        }

        .table th {
            border-top: none;
            font-weight: 600;
            color: #495057;
        }

        .table td {
            vertical-align: middle;
        }

        @@media (max-width: 768px) {
            .btn-group .btn {
                font-size: 0.8rem;
                padding: 0.375rem 0.5rem;
            }
            
            .table-responsive {
                font-size: 0.9rem;
            }
        }
    </style>
}
