@model Application.ViewModels.Product.AddStockViewModel

@{
    ViewData["Title"] = "Agregar Stock";
    var product = ViewBag.Product as Database.Entities.Product;
    var currentStock = ViewBag.CurrentStock as int? ?? 0;
}

@if (product == null)
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-triangle me-2"></i>Producto no encontrado.
    </div>
    return;
}

<div class="row justify-content-center">
    <div class="col-lg-8 col-md-10">
        <!-- Header -->
        <div class="d-flex align-items-center mb-3">
            <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-outline-secondary me-2" title="Volver a detalles">
                <i class="fas fa-arrow-left"></i>
            </a>
            <div>
                <h3 class="h4 text-success mb-1">
                    <i class="fas fa-plus-circle me-2"></i>Agregar Stock
                </h3>
                <p class="text-muted mb-0 small">Incrementa el inventario de "@product.Name"</p>
            </div>
        </div>

        <!-- Alert Messages -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <div class="row g-3">
            <!-- Product Information -->
            <div class="col-lg-4">
                <div class="card shadow-sm border-0 h-100">
                    <div class="card-header bg-primary text-white py-2">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-box me-2"></i>Información del Producto
                        </h6>
                    </div>
                    <div class="card-body p-3">
                        <div class="text-center mb-3">
                            <div class="product-icon mb-2">
                                <i class="fas fa-box fa-2x text-primary"></i>
                                </div>
                            <h5 class="mb-1">@product.Name</h5>
                                @if (!string.IsNullOrEmpty(product.Description))
                                {
                                <small class="text-muted">@product.Description</small>
                                }
                            </div>

                            <div class="product-details">
                            <div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                                <small class="text-muted">Precio de Venta:</small>
                                <small class="fw-bold text-success">$@product.Price.ToString("N2")</small>
                                </div>
                            <div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                                <small class="text-muted">Precio de Compra:</small>
                                <small class="fw-bold text-warning">$@product.PurchasePrice.ToString("N2")</small>
                                </div>
                            <div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                                <small class="text-muted">Stock Actual:</small>
                                <small class="fw-bold text-info">@currentStock unidades</small>
                                </div>
                            <div class="d-flex justify-content-between align-items-center py-1">
                                <small class="text-muted">Estado:</small>
                                <span class="badge @(currentStock > 0 ? "bg-success" : "bg-warning") small">
                                        @(currentStock > 0 ? "En Stock" : "Sin Stock")
                                    </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Add Stock Form -->
            <div class="col-lg-8">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-success text-white py-2">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-plus me-2"></i>Agregar Stock
                        </h6>
                    </div>
                    <div class="card-body p-3">
                        <form asp-action="AddStock" method="post" id="addStockForm" novalidate>
                            @Html.AntiForgeryToken()
                            <input asp-for="ProductId" type="hidden" />

                            <!-- Quantity to Add -->
                            <div class="mb-3">
                                <label asp-for="QuantityToAdd" class="form-label fw-medium">
                                    <i class="fas fa-plus-circle text-success me-2"></i>Cantidad a Agregar
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-success text-white">
                                        <i class="fas fa-boxes"></i>
                                    </span>
                                    <input asp-for="QuantityToAdd" type="number" min="1" 
                                           class="form-control" placeholder="0" 
                                           id="quantityInput" />
                                    <span class="input-group-text">unidades</span>
                                </div>
                                <span asp-validation-for="QuantityToAdd" class="text-danger small"></span>
                            </div>

                            <!-- Reason (Optional) -->
                            <div class="mb-3">
                                <label asp-for="Reason" class="form-label fw-medium">
                                    <i class="fas fa-comment text-primary me-2"></i>Motivo (Opcional)
                                </label>
                                <select asp-for="Reason" class="form-select" id="reasonSelect">
                                    <option value="">-- Selecciona un motivo --</option>
                                    <option value="Compra de inventario">📦 Compra de inventario</option>
                                    <option value="Devolución de cliente">↩️ Devolución de cliente</option>
                                    <option value="Ajuste de inventario">⚖️ Ajuste de inventario</option>
                                    <option value="Corrección de error">🔧 Corrección de error</option>
                                    <option value="Restock programado">📅 Restock programado</option>
                                    <option value="Otro">📝 Otro motivo</option>
                                </select>
                                <div class="mt-2" id="customReasonDiv" style="display: none;">
                                    <input type="text" class="form-control" id="customReasonInput" 
                                           placeholder="Especifica el motivo..." maxlength="200" />
                                </div>
                                <span asp-validation-for="Reason" class="text-danger small"></span>
                            </div>

                            <!-- New Purchase Price (Optional) -->
                            <div class="mb-3">
                                <label asp-for="NewPurchasePrice" class="form-label fw-medium">
                                    <i class="fas fa-dollar-sign text-warning me-2"></i>Nuevo Precio de Compra (Opcional)
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-warning text-white">
                                        <i class="fas fa-dollar-sign"></i>
                                    </span>
                                    <input asp-for="NewPurchasePrice" type="number" step="0.01" min="0.01" 
                                           class="form-control" placeholder="Ingresa el nuevo precio de compra" 
                                           id="newPriceInput" />
                                </div>
                                <small class="text-muted">Deja vacío para mantener el precio actual de $@product.PurchasePrice.ToString("N2")</small>
                                <span asp-validation-for="NewPurchasePrice" class="text-danger small"></span>
                            </div>

                            <!-- Stock Calculation Preview -->
                            <div class="alert alert-info py-2" id="stockPreview" style="display: none;">
                                <h6 class="alert-heading mb-2">
                                    <i class="fas fa-calculator me-2"></i>Vista Previa
                                </h6>
                                <div class="calculation-display">
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <small>Stock actual:</small>
                                        <small class="fw-medium">@currentStock unidades</small>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <small>Cantidad a agregar:</small>
                                        <small class="fw-medium text-success" id="addingQuantity">0 unidades</small>
                                    </div>
                                    <hr class="my-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="fw-bold">Nuevo stock total:</small>
                                        <small class="fw-bold text-success" id="newStockTotal">@currentStock unidades</small>
                                    </div>
                                </div>
                            </div>

                            <!-- Price Change Preview -->
                            <div class="alert alert-warning py-2" id="pricePreview" style="display: none;">
                                <h6 class="alert-heading mb-2">
                                    <i class="fas fa-dollar-sign me-2"></i>Cambio de Precio
                                </h6>
                                <div class="calculation-display">
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <small>Precio actual:</small>
                                        <small class="fw-medium">$@product.PurchasePrice.ToString("N2")</small>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <small>Nuevo precio:</small>
                                        <small class="fw-medium text-warning" id="newPriceDisplay">$0.00</small>
                                    </div>
                                    <hr class="my-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="fw-bold">Diferencia:</small>
                                        <small class="fw-bold" id="priceDifference">$0.00</small>
                                    </div>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-flex justify-content-between align-items-center">
                                <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-arrow-left me-1"></i>Volver
                                </a>
                                <button type="submit" class="btn btn-success btn-sm" id="submitBtn">
                                    <i class="fas fa-plus me-1"></i>
                                    <span id="submitText">Agregar Stock</span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        const currentStock = @currentStock;
        const currentPurchasePrice = @product.PurchasePrice;

        // Quantity input change
        document.getElementById('quantityInput').addEventListener('input', function() {
            updateStockPreview();
            updateSubmitButton();
        });

        // New price input change
        document.getElementById('newPriceInput').addEventListener('input', function() {
            updatePricePreview();
        });

        // Reason select change
        document.getElementById('reasonSelect').addEventListener('change', function() {
            const customReasonDiv = document.getElementById('customReasonDiv');
            const customReasonInput = document.getElementById('customReasonInput');
            const reasonInput = document.querySelector('[name="Reason"]');
            
            if (this.value === 'Otro') {
                customReasonDiv.style.display = 'block';
                customReasonInput.addEventListener('input', function() {
                    reasonInput.value = this.value;
                });
            } else {
                customReasonDiv.style.display = 'none';
                reasonInput.value = this.value;
            }
        });

        function updateStockPreview() {
            const quantity = parseInt(document.getElementById('quantityInput').value) || 0;
            const stockPreview = document.getElementById('stockPreview');
            const addingQuantity = document.getElementById('addingQuantity');
            const newStockTotal = document.getElementById('newStockTotal');
            
            if (quantity > 0) {
                addingQuantity.textContent = `+${quantity} unidades`;
                newStockTotal.textContent = `${currentStock + quantity} unidades`;
                stockPreview.style.display = 'block';
            } else {
                stockPreview.style.display = 'none';
            }
        }

        function updatePricePreview() {
            const newPriceInput = document.getElementById('newPriceInput');
            const newPrice = parseFloat(newPriceInput.value) || 0;
            const pricePreview = document.getElementById('pricePreview');
            const newPriceDisplay = document.getElementById('newPriceDisplay');
            const priceDifference = document.getElementById('priceDifference');
            
            // Solo mostrar preview si hay un precio válido y es diferente al actual
            if (newPrice > 0 && newPrice !== currentPurchasePrice) {
                const difference = newPrice - currentPurchasePrice;
                const differenceText = difference > 0 ? `+$${difference.toFixed(2)}` : `$${difference.toFixed(2)}`;
                const differenceClass = difference > 0 ? 'text-success' : 'text-danger';
                
                newPriceDisplay.textContent = `$${newPrice.toFixed(2)}`;
                priceDifference.textContent = differenceText;
                priceDifference.className = `fw-bold ${differenceClass}`;
                pricePreview.style.display = 'block';
            } else {
                pricePreview.style.display = 'none';
            }
        }

        function updateSubmitButton() {
            const quantity = parseInt(document.getElementById('quantityInput').value) || 0;
            const submitBtn = document.getElementById('submitBtn');
            const submitText = document.getElementById('submitText');
            
            if (quantity > 0) {
                submitBtn.disabled = false;
                submitBtn.classList.remove('btn-secondary');
                submitBtn.classList.add('btn-success');
                submitText.textContent = `Agregar ${quantity} unidades`;
            } else {
                submitBtn.disabled = true;
                submitBtn.classList.remove('btn-success');
                submitBtn.classList.add('btn-secondary');
                submitText.textContent = 'Agregar Stock';
            }
        }

        // Form validation
        document.getElementById('addStockForm').addEventListener('submit', function(e) {
            const quantity = parseInt(document.getElementById('quantityInput').value);
            
            if (!quantity || quantity <= 0) {
                e.preventDefault();
                alert('Debe ingresar una cantidad válida mayor a 0.');
                return false;
            }
            
            if (quantity > 10000) {
                e.preventDefault();
                if (!confirm(`¿Está seguro de agregar ${quantity} unidades? Esta es una cantidad muy grande.`)) {
                    return false;
                }
            }
        });

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            updateSubmitButton();
            updatePricePreview();
            
            // Limpiar precio si está vacío al cargar
            const newPriceInput = document.getElementById('newPriceInput');
            if (newPriceInput.value === '') {
                newPriceInput.value = '';
            }
        });
    </script>

    <style>
        .product-icon-large {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: rgba(var(--bs-primary-rgb), 0.1);
            margin: 0 auto;
        }

        .calculation-display {
            background: rgba(255, 255, 255, 0.8);
            border-radius: 0.5rem;
            padding: 1rem;
        }

        .quick-add {
            min-width: 60px;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .quick-add:hover {
            transform: scale(1.05);
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--bs-success);
            box-shadow: 0 0 0 0.2rem rgba(25, 135, 84, 0.25);
        }

        .input-group-lg .input-group-text {
            font-size: 1.25rem;
            font-weight: 600;
        }

        @@media (max-width: 768px) {
            .d-flex.justify-content-between {
                flex-direction: column;
                gap: 1rem;
            }
            
            .d-flex.gap-2 {
                justify-content: center;
            }

            .quick-add {
                flex: 1;
            }
        }
    </style>
} 